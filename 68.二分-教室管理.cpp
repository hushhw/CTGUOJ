/*
题目内容：https://vijos.org/p/1782
   在大学期间，经常需要租借教室。大到院系举办活动，小到学习小组自习讨论，
都需要向学校申请借教室。教室的大小功能不同，借教室人的身份不同，借教室
的手续也不一样。
   面对海量租借教室的信息，我们自然希望编程解决这个问题。我们需要处理接下
来n天的借教室信息，其中第i天学校有ri个教室可供租借。共有m份订单，每份
订单用三个正整数描述，分别为dj,sj,tj，表示某租借者需要从第sj天到第tj天租借
教室（包括第sj天和第tj天），每天需要租借dj个教室。 我们假定，租借者对教室的
大小、地点没有要求。即对于每份订单，我们只需要每天提供dj个教室，而它们具体
是哪些教室，每天是否是相同的教室则不用考虑。
   借教室的原则是先到先得，也就是说我们要按照订单的先后顺序依次为每份订单分
配教室。如果在分配的过程中遇到一份订单无法完全满足，则需要停止教室的分配，
通知当前申请人修改订单。这里的无法满足指从第sj天到第tj天中有至少一天剩余的教
室数量不足dj个。
   现在我们需要知道，是否会有订单无法完全满足。如果有，首先遇到的是哪一个申请人。
   
输入描述
第一行包含两个正整数n,m，表示天数和订单的数量。 
第二行包含n个正整数，其中第i个数为ri，表示第i天可用于租借的教室数量。 
接下来有m行，每行包含三个正整数dj表示租借的数量,sj租借开始天,tj结束天。 
每行相邻的两个数之间均用一个空格隔开。天数与订单均用从1开始的整数编号。
其中有1≤n,m≤10^6,0≤ri,dj≤10^9,1≤sj≤tj≤n。
输出描述
如果所有订单均可满足，则输出只有一行，包含一个整数0。否则输出需要修改订单
的申请人编号(1开始)。
输入样例
4 3  //表示天数和订单数
2 5 4 3  //表示每天可以租借的教室数
2 1 3 
3 2 4 
4 2 4  //表示租借数，开始天，结束天
输出样例
2
*/

#include <iostream>  
#include <cstdio>
#include <string>
using namespace std; 

const int mxn=1e6+5;  
int d[mxn]; //租借数
int r[mxn]; //每天可以租借的教室数
int s[mxn]; //开始
int t[mxn]; //结束
long sum[mxn]; //用来存储前缀数组  
int n,m;  
int ans=0;  
int cmp(int x){//尝试答案   
	memset(sum,0,sizeof(sum));  
	for(int i=1;i<=x;i++)  
	{  
		sum[s[i]]+=d[i];  
		sum[t[i]+1]-=d[i];  
	}  
	for(int i=1;i<=n;i++){  
		sum[i]+=sum[i-1];  
		if(sum[i]>r[i])  
			return 0;  
	}  
	return 1;  
}  

int main(){  
	scanf("%d%d",&n,&m);  
	int i;  
	for(i=1;i<=n;i++)scanf("%d",&r[i]);  
	for(i=1;i<=m;i++)scanf("%d%d%d",&d[i],&s[i],&t[i]);      
	int l=1,r=m;  
	while(l<=r)  
	{  
		int mid=(l+r)>>1;//比特操作  
		if(cmp(mid))  
		{  
			l=mid+1;  
			ans=mid;  
		}  
		else  
			r=mid-1;  
	}  
	if(ans==m)printf("0\n");//所有订单都满足   
	else printf("%d\n",ans+1);  
	return 0;  
}  